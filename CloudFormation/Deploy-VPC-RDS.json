{
"AWSTemplateFormatVersion": "2010-09-09",
"Description": "RDS and VPC config for ScorePredictor",
"Parameters": {
    "DBUser": {
    "NoEcho": "true",
    "Description": "The database admin account username",
    "Type": "String",
    "MinLength": "1",
    "MaxLength": "16",
    "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
    "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
    "NoEcho": "true",
    "Description": "The database admin account password",
    "Type": "String",
    "MinLength": "8",
    "MaxLength": "41",
    "AllowedPattern": "[a-zA-Z0-9]*",
    "ConstraintDescription": "must contain only alphanumeric characters."
    },
    "PrimaryIPAddress": {
        "Type": "String",
    "Description": "This must be a valid IP address ,Public IP for RDS Access.",
    "ConstraintDescription": "must be a valid IP address of the form x.x.x.x./32"
    }
},

    "Resources": {

                    "CloudFormationVPC" : {
                        "Type" : "AWS::EC2::VPC",
                        "Properties" : {
                        "CidrBlock" : "10.0.0.0/16",
                        "EnableDnsSupport" : "true",
                        "EnableDnsHostnames" : "true",
                        "InstanceTenancy" : "default",
                        "Tags" : [ {"Key" : "Name", "Value" : "ScorePredictorCF"} ]
                        }
                    },
                    "CFSPRouteTable" : {
                        "Type" : "AWS::EC2::RouteTable",
                        "Properties" : {
                           "VpcId" : { "Ref" : "CloudFormationVPC" },
                           "Tags" : [ {"Key" : "Name", "Value" : "ScorePredictorCF"} ]
                        }
                     },
                     "IGWRoute" : {
                        "Type" : "AWS::EC2::Route",
                        "DependsOn" : "SPCFInternetGateway",
                        "Properties" : {
                           "RouteTableId" : { "Ref" : "CFSPRouteTable" },
                           "DestinationCidrBlock" : "0.0.0.0/0",
                           "GatewayId" : { "Ref" : "SPCFInternetGateway" }
                        }
                     },
                     "SubnetRouteTableAssociationAZ1" : {
                        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                        "Properties" : {
                           "SubnetId" : { "Ref" : "PubSubnetAz1" },
                           "RouteTableId" : { "Ref" : "CFSPRouteTable" }
                        }
                     },
                     "SubnetRouteTableAssociationAZ2" : {
                        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                        "Properties" : {
                           "SubnetId" : { "Ref" : "PubSubnetAz2" },
                           "RouteTableId" : { "Ref" : "CFSPRouteTable" }
                        }
                     },
                     "SPCFInternetGateway" : {
                        "Type" : "AWS::EC2::InternetGateway",
                        "Properties" : {
                          "Tags" : [ {"Key" : "Name", "Value" : "ScorePredictorCF"} ]
                        }
                     },
                     "SPCFInternetGatewayAttachment" : {
                        "Type" : "AWS::EC2::VPCGatewayAttachment",
                        "Properties" : {
                            "VpcId" : { "Ref" : "CloudFormationVPC" },
                            "InternetGatewayId" : { "Ref" : "SPCFInternetGateway" }
                          }
                      },
                    "PubSubnetAz1": {
                        "Type": "AWS::EC2::Subnet",
                        "Properties": {
                            "VpcId": {
                                "Ref": "CloudFormationVPC"
                            },
                            "CidrBlock": "10.0.0.0/24",
                            "AvailabilityZone": "us-east-1a",
                            "MapPublicIpOnLaunch": "True"
                        }
                     },
                    "PubSubnetAz2": {
                            "Type": "AWS::EC2::Subnet",
                            "Properties": {
                                "VpcId": {
                                    "Ref": "CloudFormationVPC"
                                },
                                "CidrBlock": "10.0.1.0/24",
                                "AvailabilityZone": "us-east-1b",
                                "MapPublicIpOnLaunch": "True"
                            }
                    },
                    "PrivateSubnetGroup": {
                        "Type": "AWS::RDS::DBSubnetGroup",
                        "Properties": {
                          "SubnetIds": [
                            {
                              "Ref": "PubSubnetAz1"
                            },
                            {
                              "Ref": "PubSubnetAz2"
                            }
                          ],
                          "DBSubnetGroupDescription": "SQL Server Subnet Group using subnets from 2 AZs"
                        }
                      },
                    "DBSecurityGroupCF" : {
                        "Type" : "AWS::EC2::SecurityGroup",
                        "Properties" : {
                           "GroupDescription" : "Allow DBAccess",
                           "VpcId" : {"Ref" : "CloudFormationVPC"},
                           "SecurityGroupIngress" : [{
                              "IpProtocol" : "tcp",
                              "FromPort" : 1433,
                              "ToPort" : 1433,
                              "SourceSecurityGroupId": { "Fn::GetAtt" : ["CloudFormationVPC", "DefaultSecurityGroup"] }
                           }],
                           "SecurityGroupEgress" : [{
                              "IpProtocol" : "tcp",
                              "FromPort" : 1433,
                              "ToPort" : 1433,
                              "CidrIp" : "10.0.2.0/24"
                           }]
                        }
                     },
                     "InboundRule": {
                        "Type": "AWS::EC2::SecurityGroupIngress",
                        "Properties": {
                            "GroupId": {
                                "Fn::GetAtt": [
                                    "DBSecurityGroupCF",
                                    "GroupId"
                                ]
                            },
                            "CidrIp" : { "Ref" : "PrimaryIPAddress" },
                            "IpProtocol": -1
                        }
                    },
                    "NetworkAcl" : {
                        "Type" : "AWS::EC2::NetworkAcl",
                        "Properties" : {
                           "VpcId" : { "Ref" : "CloudFormationVPC" },
                           "Tags" : [ {"Key" : "Name", "Value" : "ScorePredictorCF"} ]
                        }
                     },
                     "DBAccessInboundRule": {
                        "Type": "AWS::EC2::NetworkAclEntry",
                        "Properties": {
                            "NetworkAclId": {
                                "Ref": "NetworkAcl"
                            },
                            "RuleNumber": 100,
                            "Protocol": -1,
                            "RuleAction": "allow",
                            "CidrBlock": { "Ref" : "PrimaryIPAddress" }

                        }
                    },
                    "DBAccessOutboundRule": {
                        "Type": "AWS::EC2::NetworkAclEntry",
                        "Properties": {
                            "NetworkAclId": {
                                "Ref": "NetworkAcl"
                            },
                            "RuleNumber": 1,
                            "Protocol": -1,
                            "RuleAction": "allow",
                            "CidrBlock": { "Ref" : "PrimaryIPAddress" }
                        }
                    },
                    "SPCFNetworkAclAssociationAz1" : {
                        "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
                        "Properties" : {
                           "SubnetId" : { "Ref" : "PubSubnetAz1" },
                           "NetworkAclId" : { "Ref" : "NetworkAcl" }
                        }
                     },
                     "SPCFNetworkAclAssociationAz2" : {
                        "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
                        "Properties" : {
                           "SubnetId" : { "Ref" : "PubSubnetAz2" },
                           "NetworkAclId" : { "Ref" : "NetworkAcl" }
                        }
                     },
                    "CFDBScorePredictor": {
                        "Type": "AWS::RDS::DBInstance",
                        "Properties": {
                        "DBInstanceClass": "db.t2.micro",
                        "AllocatedStorage": 20,
                        "Engine": "sqlserver-ex",
                        "DBSubnetGroupName":{
                            "Ref": "PrivateSubnetGroup"
                        },
                        "PubliclyAccessible" : "True",
                        "MasterUsername": {
                        "Ref": "DBUser"
                        },
                        "MasterUserPassword": {
                        "Ref": "DBPassword"
                        },
                        "VPCSecurityGroups" : [ { "Fn::GetAtt": [ "DBSecurityGroupCF", "GroupId" ] } ]
                        }
                    }
          
                },    
                    
                        "Outputs": {
                            "ConnectionDetails": {
                                "Description": "ConnectionDetails",
                                "Value": {
                                "Fn::Join": [
                                "",
                                [
                                "",
                                {
                                "Fn::GetAtt": [
                                "CFDBScorePredictor",
                                "Endpoint.Address"
                                ]
                                },
                                ":",
                                {
                                "Fn::GetAtt": [
                                "CFDBScorePredictor",
                                "Endpoint.Port"
                                ]
                                },
                                "/"
                                ]
                                ]
                                }
                                }
                        }
}
